create database question1;
use question1;

CREATE TABLE SALESMAN ( 
SALESMAN_ID INT (4), 
NAME VARCHAR (20), 
CITY VARCHAR (20), 
COMMISSION VARCHAR (20), 
PRIMARY KEY (SALESMAN_ID));

CREATE TABLE CUSTOMER 
(CUSTOMER_ID INT (4),
CUST_NAME VARCHAR (20), 
CITY VARCHAR (20), 
GRADE INT (3), 
Salesman_id int (4),
PRIMARY KEY (CUSTOMER_ID), 
FOREIGN KEY (salesman_id) 
REFERENCES SALESMAN (SALESMAN_ID) ON DELETE SET NULL); 

CREATE TABLE ORDERS 
(ORD_NO INT (5), 
PURCHASE_AMT DECIMAL (10, 2), 
ORD_DATE DATE, 
customer_id int,
salesman_id int,
PRIMARY KEY (ORD_NO),
FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID) ON DELETE CASCADE, 
FOREIGN KEY (SALESMAN_ID) REFERENCES SALESMAN (SALESMAN_ID) ON DELETE CASCADE);


DESC SALESMAN; 
desc orders;
desc customer;

INSERT INTO SALESMAN VALUES (1000, 'JOHN','BANGALORE','25%'); 
INSERT INTO SALESMAN VALUES (2000, 'RAVI','BANGALORE','20%'); 
INSERT INTO SALESMAN VALUES (3000, 'KUMAR','MYSORE','15%'); 
INSERT INTO SALESMAN VALUES (4000, 'SMITH','DELHI','30%'); 
INSERT INTO SALESMAN VALUES (5000, 'HARSHA','HYDRABAD','15%'); 

INSERT INTO CUSTOMER VALUES (10, 'PREETHI','BANGALORE', 100, 1000); 
INSERT INTO CUSTOMER VALUES (11, 'VIVEK','MANGALORE', 300, 1000); 
INSERT INTO CUSTOMER VALUES (12,'BHASKAR','CHENNAI', 400, 2000); 
INSERT INTO CUSTOMER VALUES (13, 'CHETHAN','BANGALORE', 200, 2000); 
INSERT INTO CUSTOMER VALUES(14,'MAMATHA','BANGALORE',400,300);

INSERT INTO ORDERS VALUES (50, 5000, '2017-05-04', 10, 1000); 
INSERT INTO ORDERS VALUES (51, 450, '2017-01-20', 10, 2000);
INSERT INTO ORDERS VALUES (52, 1000, '20170224', 13, 2000);
INSERT INTO ORDERS VALUES (53, 3500, '2017-04-13', 14, 3000); 
INSERT INTO ORDERS VALUES (54, 550, '2017-03-09', 12, 2000);

SELECT * FROM SALESMAN;
SELECT * FROM CUSTOMER;
SELECT* FROM ORDERS;


SELECT GRADE, COUNT(DISTINCT CUSTOMER_ID) 
FROM CUSTOMER
GROUP BY GRADE 
HAVING GRADE > (SELECT AVG(GRADE) 
FROM CUSTOMER
WHERE CITY='BANGALORE');


SELECT SALESMAN_ID, NAME 
FROM SALESMAN A 
WHERE (SELECT COUNT(*) 
FROM CUSTOMER
WHERE SALESMAN_ID=A.SALESMAN_ID) >1;



SELECT SALESMAN.SALESMAN_ID, NAME, CUST_NAME, COMMISSION 
FROM SALESMAN, CUSTOMER 
WHERE SALESMAN.CITY = CUSTOMER.CITY 
UNION 
SELECT SALESMAN_ID, NAME, 'NO MATCH', COMMISSION 
FROM SALESMAN 
WHERE NOT CITY = ANY 
(SELECT CITY 
FROM CUSTOMER) 
ORDER BY 2 DESC;

CREATE VIEW SALESMAN_HIGH_ORDER AS 
SELECT B.ORD_DATE, A.SALESMAN_ID, A.NAME 
FROM SALESMAN A, ORDERS B
WHERE A.SALESMAN_ID = B.SALESMAN_ID 
AND B.PURCHASE_AMT=(SELECT MAX(PURCHASE_AMT) 
FROM ORDERS C 
WHERE C.ORD_DATE = B.ORD_DATE);


Select * from SALESMAN_HIGH_ORDER;


DELETE FROM SALESMAN 
WHERE SALESMAN_ID=1000;
select* from salesman;
##################################################################################################################################################
create database question2;
use question2;

CREATE TABLE PUBLISHER 
(PUBL_NAME VARCHAR (20) PRIMARY KEY, 
PHONE BIGINT, 
ADDRESS VARCHAR (20)); 

CREATE TABLE BOOK 
(BOOK_ID INTEGER PRIMARY KEY, 
TITLE VARCHAR (20), 
PUB_YEAR VARCHAR (20), 
PUBL_NAME varchar(20),
FOREIGN KEY (PUBL_NAME) REFERENCES PUBLISHER (PUBL_NAME) ON DELETE CASCADE);

CREATE TABLE BOOK_AUTHORS 
(AUTHOR_NAME VARCHAR (20),
BOOK_ID int, 
FOREIGN KEY (BOOK_ID) REFERENCES BOOK(BOOK_ID) ON DELETE CASCADE, 
PRIMARY KEY (BOOK_ID, AUTHOR_NAME)); 

CREATE TABLE LIBRARY_BRANCH 
(BRANCH_ID INTEGER PRIMARY KEY, 
BRANCH_NAME VARCHAR (50), 
ADDRESS VARCHAR (50)); 


CREATE TABLE BOOK_COPIES 
(NO_OF_COPIES INTEGER, 
Book_id int,
branch_id int,
FOREIGN KEY (BOOK_ID) REFERENCES BOOK (BOOK_ID) ON DELETE CASCADE, 
FOREIGN KEY (BRANCH_ID) REFERENCES LIBRARY_BRANCH (BRANCH_ID) ON DELETE 
CASCADE, 
PRIMARY KEY (BOOK_ID, BRANCH_ID)); 


CREATE TABLE CARD 
(CARD_NO INTEGER PRIMARY KEY); 

CREATE TABLE BOOK_LENDING 
(DATE_OUT DATE, 
DUE_DATE DATE, 
Book_id int,
Branch_id int,
card_no int,
FOREIGN KEY (BOOK_ID) REFERENCES BOOK (BOOK_ID) ON DELETE CASCADE, 
FOREIGN KEY (BRANCH_ID) REFERENCES LIBRARY_BRANCH (BRANCH_ID) ON DELETE 
CASCADE, 
FOREIGN KEY (CARD_NO) REFERENCES CARD (CARD_NO) ON DELETE CASCADE, 
PRIMARY KEY (BOOK_ID, BRANCH_ID, CARD_NO)); 

DESC PUBLISHER; 
desc book;
desc book_authors;
desc book_lending;
desc card;
desc book_copies;
desc library_branch;
INSERT INTO PUBLISHER VALUES ('MCGRAW-HILL', 9989076587, 'BANGALORE'); 
INSERT INTO PUBLISHER VALUES ('PEARSON', 9889076565, 'NEWDELHI'); 
INSERT INTO PUBLISHER VALUES ('Jaico', 7455679345, 'HYDRABAD'); 
INSERT INTO PUBLISHER VALUES ('LIVRE', 8970862340, 'CHENNAI'); 
INSERT INTO PUBLISHER VALUES ('PLANETA', 7756120238, 'BANGALORE');




INSERT INTO BOOK VALUES (1,'DBMS','2017-01-18', 'MCGRAW-HILL'); 
INSERT INTO BOOK VALUES (2,'ADBMS','2016-06-16', 'MCGRAW-HILL'); 
INSERT INTO BOOK VALUES (3,'CN','2016-09-26', 'PEARSON'); 
INSERT INTO BOOK VALUES (4,'CG','2015-05-18', 'PLANETA'); 
INSERT INTO BOOK VALUES (5,'OS','2016-05-09', 'PEARSON');



INSERT INTO BOOK_AUTHORS VALUES ('NAVATHE', 1); 
INSERT INTO BOOK_AUTHORS VALUES ('NAVATHE', 2); 
INSERT INTO BOOK_AUTHORS VALUES ('TANENBAUM', 3); 
INSERT INTO BOOK_AUTHORS VALUES ('EDWARD ANGEL', 4); 
INSERT INTO BOOK_AUTHORS VALUES ('GALVIN', 5);



INSERT INTO LIBRARY_BRANCH VALUES (10,'Branch1','BANGALORE'); 
INSERT INTO LIBRARY_BRANCH VALUES (11,'Branch2','BANGALORE'); 
INSERT INTO LIBRARY_BRANCH VALUES (12,'Branch3', 'BANGALORE'); 
INSERT INTO LIBRARY_BRANCH VALUES (13,'Branch4','MANGALORE'); 
INSERT INTO LIBRARY_BRANCH VALUES (14,'Branch5','Mysore');



INSERT INTO BOOK_COPIES VALUES (10, 1, 10); 
INSERT INTO BOOK_COPIES VALUES (5, 1, 11); 
INSERT INTO BOOK_COPIES VALUES (2, 2, 12); 
INSERT INTO BOOK_COPIES VALUES (5, 2, 13); 
INSERT INTO BOOK_COPIES VALUES (7, 3, 14); 
INSERT INTO BOOK_COPIES VALUES (1, 5, 10); 
INSERT INTO BOOK_COPIES VALUES (3, 4, 11); 


INSERT INTO CARD VALUES (100); 
INSERT INTO CARD VALUES (101); 
INSERT INTO CARD VALUES (102); 
INSERT INTO CARD VALUES (103); 
INSERT INTO CARD VALUES (104);


INSERT INTO BOOK_LENDING VALUES ('2017-01-21','2017-06-21', 1, 10, 101); 
INSERT INTO BOOK_LENDING VALUES ('2017-02-19','2017-07-19', 3, 14, 101); 
INSERT INTO BOOK_LENDING VALUES ('2017-02-26','2017-07-26', 2, 13, 101); 
INSERT INTO BOOK_LENDING VALUES ('2017-03-15','2017-09-15', 4, 11, 101); 
INSERT INTO BOOK_LENDING VALUES ('2017-04-12','2017-10-12', 1, 11, 104);


select*from publisher;
select* from book_lending;
select* from card;
select* from book_copies;
select* from book;
select * from library_branch;
select* from publisher;





SELECT B.BOOK_ID, B.TITLE, B.PUBL_NAME, A.AUTHOR_NAME, 
C.NO_OF_COPIES, L.BRANCH_ID 
FROM BOOK B, BOOK_AUTHORS A, BOOK_COPIES C, LIBRARY_BRANCH L 
WHERE B.BOOK_ID=A.BOOK_ID 
AND B.BOOK_ID=C.BOOK_ID 
AND L.BRANCH_ID=C.BRANCH_ID;


SELECT CARD_NO 
FROM BOOK_LENDING 
WHERE DATE_OUT BETWEEN '2017-01-21' AND '2017-09-15'
GROUP BY CARD_NO 
HAVING COUNT(*)>3;


DELETE FROM BOOK 
WHERE BOOK_ID=3;
select* from book;


CREATE VIEW V_PUBLICATION AS 
SELECT PUB_YEAR 
FROM BOOK;
select* from  V_PUBLICATION ;


CREATE VIEW V_BOOKS AS 
SELECT B.BOOK_ID, B.TITLE, C.NO_OF_COPIES 
FROM BOOK B, BOOK_COPIES C, LIBRARY_BRANCH L 
WHERE B.BOOK_ID=C.BOOK_ID 
AND C.BRANCH_ID=L.BRANCH_ID;

select* from v_books;

SELECT B.BOOK_ID, B.TITLE, B.PUBL_NAME, A.AUTHOR_NAME,SUM(NO_OF_COPIES)
FROM BOOK B, BOOK_AUTHORS A, BOOK_COPIES C, LIBRARY_BRANCH L 
WHERE B.BOOK_ID=A.BOOK_ID 
AND B.BOOK_ID=C.BOOK_ID 
AND L.BRANCH_ID=C.BRANCH_ID
group by book_id
order by book_id DESC;


SELECT B.BOOK_ID, B.TITLE, B.PUBL_NAME, A.AUTHOR_NAME,SUM(NO_OF_COPIES)
FROM BOOK B, BOOK_AUTHORS A, BOOK_COPIES C, LIBRARY_BRANCH L 
WHERE B.BOOK_ID=A.BOOK_ID 
AND B.BOOK_ID=C.BOOK_ID 
AND L.BRANCH_ID=C.BRANCH_ID
group by book_id
having SUM(NO_OF_COPIES)>2
order by book_id;

SELECT BOOK_ID,PUB_YEAR FROM BOOK WHERE PUB_YEAR LIKE '2016%';


###################################

create database question3;
use question3;

 CREATE TABLE flight(
 flight_no INT,
     frm VARCHAR(20),
    too VARCHAR(20),
   distance INT,
  departs VARCHAR(20),
     arrives VARCHAR(20),
     price REAL,
     PRIMARY KEY (flight_no) );



CREATE TABLE aircraft(
   aircraft_id INT,
    aircraft_name VARCHAR(20),
   cruisingrange INT,
     PRIMARY KEY (aircraft_id) );


CREATE TABLE employees(
eid INT,
ename VARCHAR(20),
salary INT,
PRIMARY KEY (eid) );

CREATE TABLE certified(
   eid INT,
   aircraft_id INT,
  PRIMARY KEY (eid,aircraft_id),
FOREIGN KEY (eid) REFERENCES employees (eid),
   FOREIGN KEY (aircraft_id) REFERENCES aircraft (aircraft_id) );
   
   INSERT INTO flight (flight_no,frm,too,distance,departs,arrives,price) VALUES 
            (1,'Bangalore','Mangalore',360,'10:45:00','12:00:00',10000),
            (2,'Bangalore','Delhi',5000,'12:15:00','04:30:00',25000),
            (3,'Bangalore','Mumbai',3500,'02:15:00','05:25:00',30000),
            (4,'Delhi','Mumbai',4500,'10:15:00','12:05:00',35000),
            (5,'Delhi','Frankfurt',18000,'07:15:00','05:30:00',90000),
            (6,'Bangalore','Frankfurt',19500,'10:00:00','07:45:00',95000),
            (7,'Bangalore','Frankfurt',17000,'12:00:00','06:30:00',99000);
            
INSERT INTO aircraft (aircraft_id,aircraft_name,cruisingrange) values 
        (123,'Airbus',1000),
        (302,'Boeing',5000),
        (306,'Jet01',5000),
        (378,'Airbus380',8000),
        (456,'Aircraft',500),
        (789,'Aircraft02',800),
        (951,'Aircraft03',1000);



INSERT INTO employees (eid,ename,salary) VALUES
        (1,'Ajay',30000),
        (2,'Ajith',85000),
        (3,'Arnab',50000),
        (4,'Harry',45000),
        (5,'Rohit',90000),
        (6,'James',75000),
        (7,'Sunil',100000);

INSERT INTO certified (eid,aircraft_id) VALUES
        (1,123),
        (2,123),
        (1,302),
        (5,302),
        (7,302),
        (1,306),
        (2,306),
        (1,378),
        (2,378),
        (4,378),
        (6,456),
        (3,456),
        (5,789),
        (6,789),
        (3,951),
        (1,951),
        (1,789);

SELECT DISTINCT a.aircraft_name
  FROM aircraft a,certified c,employees e
   WHERE a.aircraft_id=c.aircraft_id
   AND c.eid=e.eid
    AND NOT EXISTS
     (SELECT *
     FROM employees e1
   WHERE e1.eid=e.eid
    AND e1.salary<80000);

SELECT c.eid,MAX(cruisingrange)
 FROM certified c,aircraft a
   WHERE c.aircraft_id=a.aircraft_id
   GROUP BY c.eid
    HAVING COUNT(*)>3;

SELECT a.aircraft_id,a.aircraft_name,AVG(e.salary)
    FROM aircraft a,certified c,employees e
    WHERE a.aircraft_id=c.aircraft_id
   AND c.eid=e.eid
     AND a.cruisingrange>1000
     GROUP BY a.aircraft_id,a.aircraft_name;

SELECT distinct e.ename
  FROM employees e,aircraft a,certified c
 WHERE e.eid=c.eid
    AND c.aircraft_id=a.aircraft_id
    AND a.aircraft_name='Boeing';


SELECT a.aircraft_id
    FROM aircraft a
  WHERE a.cruisingrange>
  (SELECT MIN(f.distance)
   FROM flight f
     WHERE f.frm='Bangalore'
     AND f.too='Delhi');

########################################
create database question4;
use question4;

CREATE TABLE DEPARTMENT
(DNO VARCHAR (20),
DNAME VARCHAR (20), 
MGRSTARTDATE DATE,
Primary Key (DNO)); 

desc department;


CREATE TABLE EMPLOYEE
(SSN VARCHAR (20) PRIMARY KEY,
FNAME VARCHAR(20),
LNAME VARCHAR(20),
ADDRESS VARCHAR (20),
SEX CHAR (1), 
SALARY INTEGER,
DNO varchar(20),
FOREIGN KEY (DNO) REFERENCES DEPARTMENT (DNO) ON DELETE SET NULL); 

desc employee;

ALTER TABLE DEPARTMENT
ADD MGRSSN VARCHAR(10) REFERENCES EMPLOYEE (SSN);
CREATE TABLE DLOCATION
(DLOC VARCHAR (20),
DNO varchar(20),
FOREIGN KEY (DNO) REFERENCES DEPARTMENT (DNO),
PRIMARY KEY (DNO, DLOC));


CREATE TABLE PROJECT (
PNO INTEGER PRIMARY KEY, 
PNAME VARCHAR(20),
PLOCATION VARCHAR (20),
DNO varchar(20),
FOREIGN KEY (DNO) REFERENCES DEPARTMENT (DNO));

CREATE TABLE WORKS_ON
(HOURS INT (4),
PNO integer,
SSN  Varchar(20),
FOREIGN KEY (SSN) REFERENCES EMPLOYEE (SSN),
FOREIGN KEY (PNO) REFERENCES PROJECT(PNO),
PRIMARY KEY (SSN, PNO));


INSERT INTO DEPARTMENT VALUES ('D01','Dept1','2015-06-01','EA01'); 
INSERT INTO DEPARTMENT VALUES ('D02','Dept2','2017-05-02','EA02');
INSERT INTO DEPARTMENT VALUES ('D03','Dept3','2016-06-01','EA03'); 
INSERT INTO DEPARTMENT VALUES ('D04','Dept4','2015-08-01','EA04');
INSERT INTO DEPARTMENT VALUES ('D02','Dept2','2017-05-02','EA05');

INSERT INTO EMPLOYEE (SSN, FNAME, LNAME, ADDRESS, SEX, SALARY,DNO) VALUES
('EA01','JOHN','SCOTT','BANGALORE','M', 450000,'D01');
INSERT INTO EMPLOYEE (SSN, FNAME, LNAME, ADDRESS, SEX, SALARY,DNO) VALUES
('EA02','JAMES','SMITH','BANGALORE','M', 500000,'D02');
INSERT INTO EMPLOYEE (SSN, FNAME, LNAME, ADDRESS, SEX, SALARY,DNO) VALUES
('EA03','HEARN','BAKER','BANGALORE','M', 700000,'D03');
INSERT INTO EMPLOYEE (SSN, FNAME, LNAME, ADDRESS, SEX, SALARY,DNO) VALUES
('EA04','EDWARD','SCOTT','MYSORE','M', 500000,'D04');
INSERT INTO EMPLOYEE (SSN, FNAME, LNAME, ADDRESS, SEX, SALARY,DNO) VALUES
('EA05','PAVAN','HEGDE','MANGALORE','M', 650000,'D01');
INSERT INTO EMPLOYEE (SSN, FNAME, LNAME, ADDRESS, SEX, SALARY,DNO) VALUES
('EA06','GIRISH','Shetty','MYSORE','M', 450000,'D02');
INSERT INTO EMPLOYEE (SSN, FNAME, LNAME, ADDRESS, SEX, SALARY,DNO) VALUES
('EA07','NEHA','SN','BANGALORE','F', 800000,'D02');
INSERT INTO EMPLOYEE (SSN, FNAME, LNAME, ADDRESS, SEX, SALARY,DNO) VALUES
('EA08','AMULYA','K','MANGALORE','F', 350000,'D04');


INSERT INTO DLOCATION VALUES ('BANGALORE', 'D01');
INSERT INTO DLOCATION VALUES ('BANGALORE', 'D02');
INSERT INTO DLOCATION VALUES ('MANGALORE', 'D03');
INSERT INTO DLOCATION VALUES('Mysore','D04');

INSERT INTO PROJECT VALUES (100,'IOT','BANGALORE','D01'); 
INSERT INTO PROJECT VALUES (101,'CLOUD','BANGALORE','D02'); 
INSERT INTO PROJECT VALUES (102,'BIGDATA','MANGALORE','D03'); 
INSERT INTO PROJECT VALUES (103,'SENSORS','MANGALORE','D03');
INSERT INTO PROJECT VALUES (104,'Machine learning','Mysore','D04'); 
INSERT INTO PROJECT VALUES (105,'Networks','Mysore','D04');


INSERT INTO WORKS_ON VALUES (4, '100','EA01');
INSERT INTO WORKS_ON VALUES (6, 101,'EA01');
INSERT INTO WORKS_ON VALUES (8, 102,'EA02');
INSERT INTO WORKS_ON VALUES (10,100, 'EA02');
INSERT INTO WORKS_ON VALUES (3, 100,'EA03');
INSERT INTO WORKS_ON VALUES (4, 101,'EA04');
INSERT INTO WORKS_ON VALUES (5, 102,'EA05');
INSERT INTO WORKS_ON VALUES (6, 103,'EA06');
INSERT INTO WORKS_ON VALUES (7, 104,'EA07');
INSERT INTO WORKS_ON VALUES (5, 105,'EA08');

Select * from Employee where salary > 500000 order by SSN DESC;

SELECT count(*), P.Pname FROM
EMPLOYEE E, WORKS_ON W, PROJECT P
WHERE E.SSN=W.SSN
AND W.PNO=P.PNO
group by Pname;


SELECT E.FNAME, E.LNAME, 1.1*E.SALARY AS INCR_SAL FROM
EMPLOYEE E, WORKS_ON W, PROJECT P
WHERE E.SSN=W.SSN
AND W.PNO=P.PNO
AND P.PNAME='IOT';


SELECT SUM(E.SALARY), MAX(E.SALARY), MIN(E.SALARY), AVG(E.SALARY)
FROM EMPLOYEE E, DEPARTMENT D
WHERE E.DNO=D.DNO
AND D.DNAME='Dept2';


SELECT D.DNO, COUNT(*)
FROM DEPARTMENT D, EMPLOYEE E
WHERE D.DNO=E.DNO
AND E.SALARY>600000
AND D.DNO IN (SELECT E1.DNO
FROM EMPLOYEE E1 GROUP
BY E1.DNO HAVING COUNT(*)>2)
GROUP BY D.DNO

